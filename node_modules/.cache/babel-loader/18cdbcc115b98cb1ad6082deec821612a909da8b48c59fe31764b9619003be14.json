{"ast":null,"code":"let accessToken = \"\";\nconst cliendID = \"6274a44e1b63403c9650543182ebce6c\"; // Identifiant client Spotify\nconst redirectURL = \"http://localhost:3001/\"; // URL de redirection après autorisation\n\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      // 1. Si accessToken est déjà défini, le retourner\n      return accessToken;\n    } else {\n      // 2. Sinon, chercher le jeton d'accès et le temps d'expiration dans l'URL\n      const tokenInURL = window.location.href.match(/access_token=([^&]*)/);\n      const expiryTime = window.location.href.match(/expires_in=([^&]*)/);\n      if (tokenInURL && expiryTime) {\n        // 3. Si le jeton d'accès et le temps d'expiration sont trouvés dans l'URL\n        accessToken = tokenInURL[1];\n        const expiresIn = Number(expiryTime[1]);\n        // 4. Configurer une fonction pour obtenir un nouveau jeton d'accès après le temps d'expiration\n        window.setTimeout(Spotify.getAccessToken, expiresIn * 1000);\n        // 5. Effacer les paramètres de l'URL pour des raisons de sécurité\n        window.history.pushState(\"Access Token\", null, \"/\");\n        // 6. Retourner le jeton d'accès\n        return accessToken;\n      } else {\n        // 7. Rediriger l'utilisateur vers la page d'autorisation Spotify pour obtenir le jeton d'accès\n        const redirect = `https://accounts.spotify.com/authorize?client_id=${cliendID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectURL}`;\n        window.location.href = redirect;\n      }\n    }\n  },\n  search(term) {\n    const accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    }).then(jsonResponse => {\n      if (!jsonResponse || !jsonResponse.tracks || !jsonResponse.tracks.items) {\n        console.error(\"No tracks found in the response\");\n        return [];\n      }\n      return jsonResponse.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artist: track.artists[0].name,\n        album: track.album.name,\n        uri: track.uri\n      }));\n    }).catch(error => {\n      console.error(\"Error during search:\", error);\n      return [];\n    });\n  },\n  savePlaylist(name, trackUris) {\n    if (!name || !trackUris) return;\n    const aToken = Spotify.getAccessToken();\n    const header = {\n      Authorization: `Bearer ${aToken}`\n    };\n    let userId;\n    return fetch(`https://api.spotify.com/v1/me`, {\n      headers: header\n    }).then(response => response.json()).then(jsonResponse => {\n      userId = jsonResponse.id;\n      let playlistId;\n      return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n        headers: header,\n        method: \"post\",\n        body: JSON.stringify({\n          name: name\n        })\n      }).then(response => response.json()).then(jsonResponse => {\n        playlistId = jsonResponse.id;\n        return fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n          headers: header,\n          method: \"post\",\n          body: JSON.stringify({\n            uris: trackUris\n          })\n        });\n      });\n    });\n  }\n};\nexport default Spotify;","map":{"version":3,"names":["accessToken","cliendID","redirectURL","Spotify","getAccessToken","tokenInURL","window","location","href","match","expiryTime","expiresIn","Number","setTimeout","history","pushState","redirect","search","term","fetch","method","headers","Authorization","then","response","ok","Error","json","jsonResponse","tracks","items","console","error","map","track","id","name","artist","artists","album","uri","catch","savePlaylist","trackUris","aToken","header","userId","playlistId","body","JSON","stringify","uris"],"sources":["/Users/guillaumecoquemont/react/jamming_app/src/util/Spotify/Spotify.js"],"sourcesContent":["let accessToken = \"\";\nconst cliendID = \"6274a44e1b63403c9650543182ebce6c\"; // Identifiant client Spotify\nconst redirectURL = \"http://localhost:3001/\"; // URL de redirection après autorisation\n\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      // 1. Si accessToken est déjà défini, le retourner\n      return accessToken;\n    } else {\n      // 2. Sinon, chercher le jeton d'accès et le temps d'expiration dans l'URL\n      const tokenInURL = window.location.href.match(/access_token=([^&]*)/);\n      const expiryTime = window.location.href.match(/expires_in=([^&]*)/);\n\n      if (tokenInURL && expiryTime) {\n        // 3. Si le jeton d'accès et le temps d'expiration sont trouvés dans l'URL\n        accessToken = tokenInURL[1];\n        const expiresIn = Number(expiryTime[1]);\n        // 4. Configurer une fonction pour obtenir un nouveau jeton d'accès après le temps d'expiration\n        window.setTimeout(Spotify.getAccessToken, expiresIn * 1000);\n        // 5. Effacer les paramètres de l'URL pour des raisons de sécurité\n        window.history.pushState(\"Access Token\", null, \"/\");\n        // 6. Retourner le jeton d'accès\n        return accessToken;\n      } else {\n        // 7. Rediriger l'utilisateur vers la page d'autorisation Spotify pour obtenir le jeton d'accès\n        const redirect = `https://accounts.spotify.com/authorize?client_id=${cliendID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectURL}`;\n        window.location.href = redirect;\n      }\n    }\n  },\n\n  search(term) {\n    const accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      method: \"GET\",\n      headers: { Authorization: `Bearer ${accessToken}` },\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      })\n      .then((jsonResponse) => {\n        if (\n          !jsonResponse ||\n          !jsonResponse.tracks ||\n          !jsonResponse.tracks.items\n        ) {\n          console.error(\"No tracks found in the response\");\n          return [];\n        }\n        return jsonResponse.tracks.items.map((track) => ({\n          id: track.id,\n          name: track.name,\n          artist: track.artists[0].name,\n          album: track.album.name,\n          uri: track.uri,\n        }));\n      })\n      .catch((error) => {\n        console.error(\"Error during search:\", error);\n        return [];\n      });\n  },\n\n  savePlaylist(name, trackUris) {\n    if (!name || !trackUris) return;\n    const aToken = Spotify.getAccessToken();\n    const header = { Authorization: `Bearer ${aToken}` };\n    let userId;\n    return fetch(`https://api.spotify.com/v1/me`, { headers: header })\n      .then((response) => response.json())\n      .then((jsonResponse) => {\n        userId = jsonResponse.id;\n        let playlistId;\n        return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n          headers: header,\n          method: \"post\",\n          body: JSON.stringify({ name: name }),\n        })\n          .then((response) => response.json())\n          .then((jsonResponse) => {\n            playlistId = jsonResponse.id;\n            return fetch(\n              `https://api.spotify.com/v1/playlists/${playlistId}/tracks`,\n              {\n                headers: header,\n                method: \"post\",\n                body: JSON.stringify({ uris: trackUris }),\n              }\n            );\n          });\n      });\n  },\n};\n\nexport default Spotify;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}